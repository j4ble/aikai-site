document.addEventListener('DOMContentLoaded',()=>{const hamburgerMenu=document.getElementById('hamburgerMenu');const navMenuWrapper=document.getElementById('navMenuWrapper');const navMenuOriginalParent=navMenuWrapper?navMenuWrapper.parentElement:null;const navLinks=document.querySelectorAll('.nav-link');if(hamburgerMenu&&navMenuWrapper){const updateNavMenuPlacement=()=>{const isOpen=document.body.classList.contains('menu-open');if(isOpen){if(navMenuWrapper.parentElement!==document.body){document.body.appendChild(navMenuWrapper)}}else if(navMenuOriginalParent){if(navMenuWrapper.parentElement!==navMenuOriginalParent){navMenuOriginalParent.appendChild(navMenuWrapper)}}};hamburgerMenu.addEventListener('click',()=>{document.body.classList.toggle('menu-open');updateNavMenuPlacement()});updateNavMenuPlacement()}
navLinks.forEach(link=>{link.addEventListener('click',()=>{if(document.body.classList.contains('menu-open')){document.body.classList.remove('menu-open');if(navMenuOriginalParent&&navMenuWrapper.parentElement!==navMenuOriginalParent){navMenuOriginalParent.appendChild(navMenuWrapper)}}})});const darkModeToggle=document.getElementById('darkModeToggle');const darkModeToggleButton=document.getElementById('darkModeToggleButton');const body=document.body;const previewImage=document.getElementById('previewImage');const lightPreviewSrc='a1_light.png';const darkPreviewSrc='a1_dark.png';const prefersDark=localStorage.getItem('darkMode')==='enabled';const applyTheme=(isDark)=>{if(isDark){body.classList.add('dark-mode');if(previewImage)previewImage.src=darkPreviewSrc;localStorage.setItem('darkMode','enabled')}else{body.classList.remove('dark-mode');if(previewImage)previewImage.src=lightPreviewSrc;localStorage.setItem('darkMode','disabled')}
if(darkModeToggle)darkModeToggle.checked=isDark};const initialIsDark=localStorage.getItem('darkMode')!=='disabled';if(initialIsDark){body.classList.add('dark-mode');if(previewImage)previewImage.src=darkPreviewSrc}else{if(previewImage)previewImage.src=lightPreviewSrc}
if(darkModeToggle)darkModeToggle.checked=initialIsDark;if(darkModeToggle){darkModeToggle.addEventListener('change',()=>{applyTheme(darkModeToggle.checked)})}
if(darkModeToggleButton){darkModeToggleButton.addEventListener('click',()=>{const isDark=body.classList.contains('dark-mode');applyTheme(!isDark)})}
const logoContainer=document.querySelector('.logo-container');if(logoContainer){logoContainer.style.cursor='pointer';logoContainer.addEventListener('click',()=>{window.scrollTo({top:0,behavior:'smooth'})})}
const sliderContainer=document.getElementById('profileSlider');if(sliderContainer){const dataElement=document.getElementById('profilesData');let profiles=[];if(dataElement){try{profiles=JSON.parse(dataElement.textContent.trim())}catch(err){console.error('Failed to parse embedded profiles JSON',err)}}
if(Array.isArray(profiles)&&profiles.length){profiles.sort(()=>Math.random()-0.5);const duplicatedProfiles=[...profiles,...profiles,...profiles];buildCards(duplicatedProfiles)}
function buildCards(profiles){const observer=new IntersectionObserver(handleIntersect,{root:sliderContainer,threshold:0.25});profiles.forEach(profile=>{const{card,start,stop,cleanup}=createCard(profile);card.__startTimer=start;card.__stopTimer=stop;card.__cleanup=cleanup;sliderContainer.appendChild(card);observer.observe(card)});sliderContainer.__observer=observer;addDragScrolling(sliderContainer)}
function createCard(profile){const card=document.createElement('div');card.className='profile-card';const initialImg=document.createElement('img');initialImg.className='profile-image';initialImg.alt=profile.name;initialImg.loading='lazy';const startIdx=Math.floor(Math.random()*profile.images.length);initialImg.dataset.idx=startIdx;initialImg.src='aikai_profile_card.jpg';const actualImg=new Image();const onLoadHandler=()=>{if(initialImg.parentElement){initialImg.src=`images/${profile.images[startIdx]}`}};const onErrorHandler=()=>{console.warn(`Failed to load profile image: ${profile.images[startIdx]}`)};actualImg.onload=onLoadHandler;actualImg.onerror=onErrorHandler;actualImg.src=`images/${profile.images[startIdx]}`;card.appendChild(initialImg);let currentImg=initialImg;const info=document.createElement('div');info.className='profile-info';info.innerHTML=`<h2 class="profile-name">${profile.name}, ${profile.age}</h2><p class="profile-details">${profile.details}</p>`;card.appendChild(info);const clickHandler=()=>{const visibleImg=card.querySelector('.profile-image[style*="opacity: 1"], .profile-image:not([style*="opacity"])');if(visibleImg&&visibleImg.src&&!visibleImg.src.includes('aikai_profile_card.jpg')){const currentIdx=parseInt(visibleImg.dataset.idx,10);openImageModal(visibleImg,{isProfile:!0,profile:profile,currentIndex:currentIdx})}};card.addEventListener('click',clickHandler);let timerId=null;const firstDelay=1000+Math.floor((Math.random()*3)+1)*1000;function changeImage(){let idx=parseInt(currentImg.dataset.idx,10);const nextIdx=(idx+1)%profile.images.length;const nextSrc=`images/${profile.images[nextIdx]}`;const newImg=document.createElement('img');newImg.className='profile-image';newImg.alt=profile.name;newImg.loading='lazy';newImg.dataset.idx=nextIdx;newImg.style.opacity='0';newImg.src='aikai_profile_card.jpg';card.appendChild(newImg);const actualImg=new Image();const onLoadHandler=()=>{if(newImg.parentElement){newImg.src=nextSrc;requestAnimationFrame(()=>{newImg.style.opacity='1';currentImg.style.opacity='0'})}};const onErrorHandler=()=>{if(newImg.parentElement){console.warn(`Failed to load profile image: ${profile.images[nextIdx]}`);requestAnimationFrame(()=>{newImg.style.opacity='1';currentImg.style.opacity='0'})}};actualImg.onload=onLoadHandler;actualImg.onerror=onErrorHandler;actualImg.src=nextSrc;newImg.addEventListener('transitionend',()=>{if(currentImg&&currentImg.parentElement){currentImg.remove()}
currentImg=newImg},{once:!0})}
function scheduleNext(delay){timerId=setTimeout(()=>{changeImage();scheduleNext(4000)},delay)}
function start(){if(timerId!==null)return;scheduleNext(firstDelay)}
function stop(){clearTimeout(timerId);timerId=null}
function cleanup(){stop();card.removeEventListener('click',clickHandler);actualImg.onload=null;actualImg.onerror=null}
return{card,start,stop,cleanup}}
function handleIntersect(entries){entries.forEach(entry=>{const card=entry.target;if(entry.isIntersecting){card.__startTimer&&card.__startTimer()}else{card.__stopTimer&&card.__stopTimer()}})}
function addDragScrolling(container){let isDown=!1;let startX;let scrollLeft;const autoScrollSpeed=(()=>{const test=document.createElement('div');test.style.cssText='width:20px;height:1px;overflow:scroll;visibility:hidden;position:absolute;';const inner=document.createElement('div');inner.style.width='40px';test.appendChild(inner);document.body.appendChild(test);test.scrollLeft=0.5;const supportsFractional=test.scrollLeft>0&&test.scrollLeft<1;document.body.removeChild(test);return supportsFractional?0.5:1})();let autoScrollAnimationId=null;let isPaused=!1;let isInitialized=!1;let velocity=0;let momentumFrameId=null;let lastMoveTime=0;let lastMoveScrollLeft=0;function clampInfinite(pos){const S=container.scrollWidth/3;const leftLimit=S-container.clientWidth;const rightLimit=2*S;if(pos<leftLimit)return pos+S;if(pos>rightLimit)return pos-S;return pos}
function autoScroll(){if(!isInitialized&&container.scrollWidth>container.clientWidth){container.scrollLeft=container.scrollWidth/3;isInitialized=!0}
if(!isPaused&&!isDown){container.scrollLeft=clampInfinite(container.scrollLeft+autoScrollSpeed)}
autoScrollAnimationId=requestAnimationFrame(autoScroll)}
autoScroll();container.addEventListener('pointerdown',(e)=>{if(momentumFrameId){cancelAnimationFrame(momentumFrameId);momentumFrameId=null}
isDown=!0;container.classList.add('grabbing');startX=e.clientX;scrollLeft=container.scrollLeft;lastMoveScrollLeft=scrollLeft;lastMoveTime=performance.now()});container.addEventListener('pointermove',(e)=>{if(!isDown)return;e.preventDefault();const walk=(e.clientX-startX)*1.5;const newPos=clampInfinite(scrollLeft-walk);container.scrollLeft=newPos;const now=performance.now();const dt=now-lastMoveTime;if(dt>0){const dx=newPos-lastMoveScrollLeft;velocity=dx/dt*16;lastMoveScrollLeft=newPos;lastMoveTime=now}},{passive:!1});container.addEventListener('pointerup',pointerUp);container.addEventListener('pointercancel',pointerUp);container.addEventListener('pointerleave',pointerUp);function pointerUp(){if(!isDown)return;isDown=!1;container.classList.remove('grabbing');if(Math.abs(velocity)>0.5){isPaused=!0;momentumScroll(velocity)}}
function momentumScroll(v){const friction=0.95;function step(){if(Math.abs(v)<autoScrollSpeed){isPaused=!1;momentumFrameId=null;return}
container.scrollLeft=clampInfinite(container.scrollLeft+v);v*=friction;momentumFrameId=requestAnimationFrame(step)}
step()}
container.addEventListener('dragstart',e=>e.preventDefault());container.addEventListener('selectstart',e=>e.preventDefault());container.__cleanupScrolling=()=>{cancelAnimationFrame(autoScrollAnimationId);if(momentumFrameId)cancelAnimationFrame(momentumFrameId);autoScrollAnimationId=null;momentumFrameId=null};window.addEventListener('beforeunload',container.__cleanupScrolling)}
window.__cleanupSlider=()=>{if(sliderContainer){Array.from(sliderContainer.children).forEach(card=>{if(card.__stopTimer)card.__stopTimer();if(card.__cleanup)card.__cleanup();});if(sliderContainer.__observer){sliderContainer.__observer.disconnect()}
if(sliderContainer.__cleanupScrolling){sliderContainer.__cleanupScrolling()}}}}
const form=document.getElementById('sib-form');const inlineButton=document.getElementById('submitButtonInline');const originalButton=document.querySelector('.sib-form-block__button-with-loader');if(form&&inlineButton&&originalButton){inlineButton.addEventListener('click',(e)=>{e.preventDefault();const emailInput=document.getElementById('EMAIL');if(!emailInput||!emailInput.value.trim()){const errorMessage=document.getElementById('error-message');if(errorMessage){errorMessage.style.display='block'}
return}
const emailRegex=/^[^\s@]+@[^\s@]+\.[^\s@]+$/;if(!emailRegex.test(emailInput.value.trim())){const errorMessage=document.getElementById('error-message');if(errorMessage){errorMessage.style.display='block'}
return}
const errorMessage=document.getElementById('error-message');if(errorMessage){errorMessage.style.display='none'}
inlineButton.classList.add('loading');originalButton.click()});const observer=new MutationObserver((mutations)=>{mutations.forEach((mutation)=>{if(mutation.type==='attributes'||mutation.type==='childList'){const successMessage=document.getElementById('success-message');const errorMessage=document.getElementById('error-message');if(successMessage&&successMessage.style.display!=='none'&&successMessage.offsetHeight>0){inlineButton.classList.remove('loading')}else if(errorMessage&&errorMessage.style.display!=='none'&&errorMessage.offsetHeight>0){inlineButton.classList.remove('loading')}}})});const formContainer=document.getElementById('sib-form-container');if(formContainer){observer.observe(formContainer,{childList:!0,subtree:!0,attributes:!0,attributeFilter:['style']})}
const emailInput=document.getElementById('EMAIL');if(emailInput){emailInput.addEventListener('keypress',(e)=>{if(e.key==='Enter'){e.preventDefault();inlineButton.click()}})}}
const navVipContainer=document.getElementById('navVipContainer');const vipButtonContainer=document.querySelector('.vip-button-container');if(navVipContainer&&vipButtonContainer){const logoContainer=document.querySelector('.logo-container');const vipObserver=new IntersectionObserver((entries)=>{entries.forEach((entry)=>{if(entry.isIntersecting){navVipContainer.classList.remove('visible')}else{navVipContainer.classList.add('visible')}})},{threshold:0.1,rootMargin:'-50px 0px'});vipObserver.observe(vipButtonContainer)}});let modalTouchStartX=0;let modalTouchEndX=0;function openImageModal(img,profileData=null){const modal=document.getElementById('imageModal');const modalImage=document.getElementById('modalImage');const modalNav=document.getElementById('modalNav');if(!(modal&&modalImage))return;let targetImg=img;const container=img.parentElement;if(container&&(container.classList.contains('intro-image-container')||container.classList.contains('match-image-container')||container.classList.contains('message-image-container'))){const images=container.querySelectorAll('img');for(const imgElement of images){const computedStyle=window.getComputedStyle(imgElement);if(computedStyle.opacity!=='0'){targetImg=imgElement;break}}}
modalImage.src=targetImg.src;modalImage.alt=targetImg.alt;modal.style.display='flex';modal.addEventListener('touchstart',handleTouchStart,{passive:!0});modal.addEventListener('touchend',handleTouchEnd,{passive:!0});if(profileData&&profileData.isProfile){window.currentProfileData=profileData;if(modalNav&&profileData.profile.images.length>1){modalNav.style.display='block'}else if(modalNav){modalNav.style.display='none'}}else{const galleryContainer=img.closest('.info-images');if(galleryContainer){const crossfadeContainers=Array.from(galleryContainer.querySelectorAll('.intro-image-container, .match-image-container, .message-image-container'));const standaloneImages=Array.from(galleryContainer.querySelectorAll('.info-image')).filter(imgEl=>!imgEl.closest('.intro-image-container, .match-image-container, .message-image-container'));const totalImages=crossfadeContainers.length+standaloneImages.length;if(totalImages>1){let currentIndex=-1;const imageList=[];crossfadeContainers.forEach((container,idx)=>{const visibleImg=Array.from(container.querySelectorAll('img')).find(imgEl=>{const computedStyle=window.getComputedStyle(imgEl);return computedStyle.opacity!=='0'});if(visibleImg){imageList.push(visibleImg.src);if(container.contains(img)){currentIndex=idx}}});standaloneImages.forEach((imgEl,idx)=>{imageList.push(imgEl.src);if(imgEl===img){currentIndex=crossfadeContainers.length+idx}});window.currentProfileData={isProfile:!1,isGallery:!0,profile:{name:'Gallery',images:imageList},currentIndex:Math.max(0,currentIndex)};if(modalNav)modalNav.style.display='block'}else{window.currentProfileData=null;if(modalNav)modalNav.style.display='none'}}else{window.currentProfileData=null;if(modalNav)modalNav.style.display='none'}}
document.addEventListener('keydown',handleModalKeydown);modal.addEventListener('click',handleModalBackgroundClick);document.body.style.overflow='hidden'}
function closeImageModal(){const modal=document.getElementById('imageModal');modal.removeEventListener('touchstart',handleTouchStart);modal.removeEventListener('touchend',handleTouchEnd);document.removeEventListener('keydown',handleModalKeydown);modal.removeEventListener('click',handleModalBackgroundClick);modal.style.display='none';window.currentProfileData=null;document.body.style.overflow=''}
function handleTouchStart(event){modalTouchStartX=event.changedTouches[0].screenX}
function handleTouchEnd(event){modalTouchEndX=event.changedTouches[0].screenX;handleSwipeGesture()}
function handleSwipeGesture(){const swipeThreshold=50;const swipeDistance=modalTouchStartX-modalTouchEndX;if(Math.abs(swipeDistance)>swipeThreshold&&window.currentProfileData){if(swipeDistance>0){navigateModalImage(1)}else{navigateModalImage(-1)}}}
function handleModalKeydown(event){if(event.key==='Escape'){closeImageModal();return}
if(!window.currentProfileData||!window.currentProfileData.profile)return;const totalImages=window.currentProfileData.profile.images.length;if(totalImages<=1)return;if(event.key==='ArrowLeft'){event.preventDefault();navigateModalImage(-1)}else if(event.key==='ArrowRight'){event.preventDefault();navigateModalImage(1)}}
function handleModalBackgroundClick(event){const modalImage=document.getElementById('modalImage');const modalClose=document.querySelector('.modal-close');const modalArrows=document.querySelectorAll('.modal-arrow');let isArrowClick=!1;modalArrows.forEach(arrow=>{if(arrow.contains(event.target)){isArrowClick=!0}});if(event.target!==modalImage&&event.target!==modalClose&&!isArrowClick){closeImageModal()}}
function navigateModalImage(direction){if(!window.currentProfileData||!window.currentProfileData.profile)return;const modalImage=document.getElementById('modalImage');const profile=window.currentProfileData.profile;const totalImages=profile.images.length;if(totalImages<=1)return;window.currentProfileData.currentIndex=(window.currentProfileData.currentIndex+direction+totalImages)%totalImages;const nextImageData=profile.images[window.currentProfileData.currentIndex];let nextSrc;if(window.currentProfileData.isGallery){nextSrc=nextImageData;const isDarkMode=document.body.classList.contains('dark-mode');if(isDarkMode){if(nextSrc.includes('aikai_intro.jpg')){nextSrc=nextSrc.replace('aikai_intro.jpg','aikai_intro_dark.jpg')}else if(nextSrc.includes('match_light.jpg')){nextSrc=nextSrc.replace('match_light.jpg','match.jpg')}else if(nextSrc.includes('message_light.png')){nextSrc=nextSrc.replace('message_light.png','message_dark.png')}}else{if(nextSrc.includes('aikai_intro_dark.jpg')){nextSrc=nextSrc.replace('aikai_intro_dark.jpg','aikai_intro.jpg')}else if(nextSrc.includes('match.jpg')&&!nextSrc.includes('match_light.jpg')){nextSrc=nextSrc.replace('match.jpg','match_light.jpg')}else if(nextSrc.includes('message_dark.png')){nextSrc=nextSrc.replace('message_dark.png','message_light.png')}}}else{nextSrc=`images/${nextImageData}`}
const preloader=new Image();preloader.onload=()=>{if(modalImage){modalImage.src=nextSrc;const imageNumber=window.currentProfileData.currentIndex+1;const totalCount=totalImages;modalImage.alt=`${profile.name} - Photo ${imageNumber} of ${totalCount}`}};preloader.onerror=()=>{console.warn(`Failed to load modal image: ${nextImageData}`);console.warn(`Attempted src: ${nextSrc}`)};preloader.src=nextSrc}